<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>Installation &#8212; Flask Documentation (0.12)</title>
    
    <link rel="stylesheet" href="../_static/flask.css" type="text/css" />
    <link rel="stylesheet" href="../_static/pygments.css" type="text/css" />
    
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    '../',
        VERSION:     '0.12',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '',
        HAS_SOURCE:  true,
        SOURCELINK_SUFFIX: '.txt'
      };
    </script>
    <script type="text/javascript" src="../_static/jquery.js"></script>
    <script type="text/javascript" src="../_static/underscore.js"></script>
    <script type="text/javascript" src="../_static/doctools.js"></script>
    <link rel="index" title="Index" href="../genindex/" />
    <link rel="search" title="Search" href="../search/" />
    <link rel="next" title="Quickstart" href="../quickstart/" />
    <link rel="prev" title="Foreword for Experienced Programmers" href="../advanced_foreword/" />
   
  
    
  
  <link rel="canonical" href="../../latest/installation/">
  <link media="only screen and (max-device-width: 480px)" href="../_static/small.css" type= "text/css" rel="stylesheet" />

  </head>
  <body role="document">
  
  

    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="../genindex/" title="General Index"
             accesskey="I">index</a></li>
        <li class="right" >
          <a href="../quickstart/" title="Quickstart"
             accesskey="N">next</a> |</li>
        <li class="right" >
          <a href="../advanced_foreword/" title="Foreword for Experienced Programmers"
             accesskey="P">previous</a> |</li>
        <li class="nav-item nav-item-0"><a href="../">Flask Documentation (0.12)</a> &#187;</li> 
      </ul>
    </div>  

    <div class="document">
  
  
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <div class="section" id="installation">
<span id="id1"></span><h1>Installation<a class="headerlink" href="#installation" title="Permalink to this headline">¶</a></h1>
<p>Flask depends on some external libraries, like <a class="reference external" href="http://werkzeug.pocoo.org/">Werkzeug</a> and <a class="reference external" href="http://jinja.pocoo.org/">Jinja2</a>.
Werkzeug is a toolkit for WSGI, the standard Python interface between web
applications and a variety of servers for both development and deployment.
Jinja2 renders templates.</p>
<p>So how do you get all that on your computer quickly?  There are many ways you
could do that, but the most kick-ass method is virtualenv, so let&#8217;s have a look
at that first.</p>
<p>You will need Python 2.6 or newer to get started, so be sure to have an
up-to-date Python 2.x installation.  For using Flask with Python 3 have a
look at <a class="reference internal" href="../python3/#python3-support"><span class="std std-ref">Python 3 Support</span></a>.</p>
<div class="section" id="virtualenv">
<span id="id2"></span><h2>virtualenv<a class="headerlink" href="#virtualenv" title="Permalink to this headline">¶</a></h2>
<p>Virtualenv is probably what you want to use during development, and if you have
shell access to your production machines, you&#8217;ll probably want to use it there,
too.</p>
<p>What problem does virtualenv solve?  If you like Python as much as I do,
chances are you want to use it for other projects besides Flask-based web
applications.  But the more projects you have, the more likely it is that you
will be working with different versions of Python itself, or at least different
versions of Python libraries.  Let&#8217;s face it: quite often libraries break
backwards compatibility, and it&#8217;s unlikely that any serious application will
have zero dependencies.  So what do you do if two or more of your projects have
conflicting dependencies?</p>
<p>Virtualenv to the rescue!  Virtualenv enables multiple side-by-side
installations of Python, one for each project.  It doesn&#8217;t actually install
separate copies of Python, but it does provide a clever way to keep different
project environments isolated.  Let&#8217;s see how virtualenv works.</p>
<p>If you are on Mac OS X or Linux, chances are that the following
command will work for you:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ sudo pip install virtualenv
</pre></div>
</div>
<p>It will probably install virtualenv on your system.  Maybe it&#8217;s even
in your package manager.  If you use Ubuntu, try:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ sudo apt-get install python-virtualenv
</pre></div>
</div>
<p>If you are on Windows and don&#8217;t have the <code class="docutils literal"><span class="pre">easy_install</span></code> command, you must
install it first.  Check the <a class="reference internal" href="#windows-easy-install"><span class="std std-ref">pip and setuptools on Windows</span></a> section for more
information about how to do that.  Once you have it installed, run the same
commands as above, but without the <code class="docutils literal"><span class="pre">sudo</span></code> prefix.</p>
<p>Once you have virtualenv installed, just fire up a shell and create
your own environment.  I usually create a project folder and a <code class="file docutils literal"><span class="pre">venv</span></code>
folder within:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ mkdir myproject
$ cd myproject
$ virtualenv venv
New python executable in venv/bin/python
Installing setuptools, pip............done.
</pre></div>
</div>
<p>Now, whenever you want to work on a project, you only have to activate the
corresponding environment.  On OS X and Linux, do the following:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ . venv/bin/activate
</pre></div>
</div>
<p>If you are a Windows user, the following command is for you:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ venv\Scripts\activate
</pre></div>
</div>
<p>Either way, you should now be using your virtualenv (notice how the prompt of
your shell has changed to show the active environment).</p>
<p>And if you want to go back to the real world, use the following command:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ deactivate
</pre></div>
</div>
<p>After doing this, the prompt of your shell should be as familiar as before.</p>
<p>Now, let&#8217;s move on. Enter the following command to get Flask activated in your
virtualenv:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ pip install Flask
</pre></div>
</div>
<p>A few seconds later and you are good to go.</p>
</div>
<div class="section" id="system-wide-installation">
<h2>System-Wide Installation<a class="headerlink" href="#system-wide-installation" title="Permalink to this headline">¶</a></h2>
<p>This is possible as well, though I do not recommend it.  Just run
<code class="docutils literal"><span class="pre">pip</span></code> with root privileges:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ sudo pip install Flask
</pre></div>
</div>
<p>(On Windows systems, run it in a command-prompt window with administrator
privileges, and leave out <code class="docutils literal"><span class="pre">sudo</span></code>.)</p>
</div>
<div class="section" id="living-on-the-edge">
<h2>Living on the Edge<a class="headerlink" href="#living-on-the-edge" title="Permalink to this headline">¶</a></h2>
<p>If you want to work with the latest version of Flask, there are two ways: you
can either let <code class="docutils literal"><span class="pre">pip</span></code> pull in the development version, or you can tell
it to operate on a git checkout.  Either way, virtualenv is recommended.</p>
<p>Get the git checkout in a new virtualenv and run in development mode:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span>$ git clone http://github.com/pallets/flask.git
Initialized empty Git repository in ~/dev/flask/.git/
$ cd flask
$ virtualenv venv
New python executable in venv/bin/python
Installing setuptools, pip............done.
$ . venv/bin/activate
$ python setup.py develop
...
Finished processing dependencies for Flask
</pre></div>
</div>
<p>This will pull in the dependencies and activate the git head as the current
version inside the virtualenv.  Then all you have to do is run <code class="docutils literal"><span class="pre">git</span> <span class="pre">pull</span>
<span class="pre">origin</span></code> to update to the latest version.</p>
</div>
<div class="section" id="pip-and-setuptools-on-windows">
<span id="windows-easy-install"></span><h2><cite>pip</cite> and <cite>setuptools</cite> on Windows<a class="headerlink" href="#pip-and-setuptools-on-windows" title="Permalink to this headline">¶</a></h2>
<p>Sometimes getting the standard &#8220;Python packaging tools&#8221; like <code class="docutils literal"><span class="pre">pip</span></code>, <code class="docutils literal"><span class="pre">setuptools</span></code>
and <code class="docutils literal"><span class="pre">virtualenv</span></code> can be a little trickier, but nothing very hard. The crucial
package you will need is pip - this will let you install
anything else (like virtualenv). Fortunately there is a &#8220;bootstrap script&#8221;
you can run to install.</p>
<p>If you don&#8217;t currently have <code class="docutils literal"><span class="pre">pip</span></code>, then <cite>get-pip.py</cite> will install it for you.</p>
<p><a class="reference external" href="https://bootstrap.pypa.io/get-pip.py">get-pip.py</a></p>
<p>It should be double-clickable once you download it. If you already have <code class="docutils literal"><span class="pre">pip</span></code>,
you can upgrade them by running:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="o">&gt;</span> <span class="n">pip</span> <span class="n">install</span> <span class="o">--</span><span class="n">upgrade</span> <span class="n">pip</span> <span class="n">setuptools</span>
</pre></div>
</div>
<p>Most often, once you pull up a command prompt you want to be able to type <code class="docutils literal"><span class="pre">pip</span></code>
and <code class="docutils literal"><span class="pre">python</span></code> which will run those things, but this might not automatically happen
on Windows, because it doesn&#8217;t know where those executables are (give either a try!).</p>
<p>To fix this, you should be able to navigate to your Python install directory
(e.g <code class="file docutils literal"><span class="pre">C:Python27</span></code>), then go to <code class="file docutils literal"><span class="pre">Tools</span></code>, then <code class="file docutils literal"><span class="pre">Scripts</span></code>, then find the
<code class="file docutils literal"><span class="pre">win_add2path.py</span></code> file and run that. Open a <strong>new</strong> Command Prompt and
check that you can now just type <code class="docutils literal"><span class="pre">python</span></code> to bring up the interpreter.</p>
<p>Finally, to install <a class="reference internal" href="#virtualenv">virtualenv</a>, you can simply run:</p>
<div class="highlight-default"><div class="highlight"><pre><span></span><span class="o">&gt;</span> <span class="n">pip</span> <span class="n">install</span> <span class="n">virtualenv</span>
</pre></div>
</div>
<p>Then you can be off on your way following the installation instructions above.</p>
</div>
</div>


          </div>
        </div>
      </div>

      <div class="sphinxsidebar" role="navigation" aria-label="main navigation">
        <div class="sphinxsidebarwrapper"><p class="logo"><a href="../">
  <img class="logo" src="../_static/flask.png" alt="Logo"/>
</a></p>
  <h3><a href="../">Table Of Contents</a></h3>
  <ul>
<li><a class="reference internal" href="#">Installation</a><ul>
<li><a class="reference internal" href="#virtualenv">virtualenv</a></li>
<li><a class="reference internal" href="#system-wide-installation">System-Wide Installation</a></li>
<li><a class="reference internal" href="#living-on-the-edge">Living on the Edge</a></li>
<li><a class="reference internal" href="#pip-and-setuptools-on-windows"><cite>pip</cite> and <cite>setuptools</cite> on Windows</a></li>
</ul>
</li>
</ul>
<h3>Versions</h3>
<ul class="versions">
  
    
      
        
      
      <li><a href="../../dev/installation/">Development</a>
    
    <span class=note>(unstable)</span>
  
    
      <li><a href="." class="current">Flask 0.12.x</a>
    
    <span class=note>(stable)</span>
  
    
      
        
      
      <li><a href="../../0.11/installation/">Flask 0.11.x</a>
    
    
  
    
      
        
      
      <li><a href="../../0.10/installation/">Flask 0.10.x</a>
    
    
  
</ul>
<div class="carbon_ads">
  <script async type="text/javascript" src="//cdn.carbonads.com/carbon.js?zoneid=1673&serve=C6AILKT&placement=pocooorg" id="_carbonads_js"></script>
</div><h3>Related Topics</h3>
<ul>
  <li><a href="../">Documentation overview</a><ul>
      <li>Previous: <a href="../advanced_foreword/" title="previous chapter">Foreword for Experienced Programmers</a></li>
      <li>Next: <a href="../quickstart/" title="next chapter">Quickstart</a></li>
  </ul></li>
</ul>
<div id="searchbox">
  <h3>Quick search</h3>
    <form class="search" action="../search/" method="get">
      <input type="text" name="q" />
      <input type="submit" value="Go" />
    </form>
</div>
        </div>
      </div>
      <div class="clearer"></div>
    </div>
    <div class="footer">
      &copy; Copyright 2010 - 2017, Armin Ronacher.
      Created using <a href="http://sphinx.pocoo.org/">Sphinx</a>.
    </div>
  
  </body>
</html>