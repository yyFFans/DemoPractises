颜色空间缩减法：将现有颜色空间值除以某个输入值，以获得较少的颜色。

减少计算：预先计算所有可能的值，然后需要这些值的时候，利用查表方法

矩阵掩码操作：根据掩码矩阵重新计算图像中每个像素的值。掩码矩阵中的值表示近邻像素值（包括该像素自身的值）对新像素值有多大影响。
从数学观点看，我们用自己设置的权值，对像素邻域内的值做了个加权平均。

我们来看看实现掩码操作的两种方法。一种方法是用基本的像素访问方法，另一种方法是用 filter2D 函数。

像素访问法直接利用矩阵运算的方法做处理，对每一个点根据掩码矩阵做运算，生成新的像素点。

Mask 为掩码矩阵  I为输入  K为掩码操作后生成的新的矩阵。
filter2D(I,K,I.depth(),Mask)


图像混合  线性混合
g(x) = A*F(x) + (1-A)*f(x)

addWeighted( src1, alpha, src2, beta, 0.0, dst);

图像变换  亮度和对比度变换

A表示增益，控制 对比度   B表示偏置 控制亮度
G(x) = A*F(x) + B

image.convertTo(new_image, -1, alpha, beta);

这里的 convertTo 将执行我们想做的 new_image = a*image + beta